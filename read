-- Webhook configuration
getgenv().WebhookUrl = getgenv().WebhookUrl or "https://ptb.discord.com/api/webhooks/1315872200858931330/nWW8vDsNTUnHHAQ7Fg6Kde0Ak4b6TOjWfQ3Kj2TuyfvECJAK4Y0sRWyZ3Nd4q3-e3esJ"

-- Helper function to send data to the webhook
local function sendToWebhook(content)
    local data = {
        ["username"] = "Stat Logger",
        ["avatar_url"] = "https://images-ext-1.discordapp.net/external/l5-KoXA2mt7NrUE6gWvxiprX6o72ojZeBHhDDdoI9IE/%3Fsize%3D4096/https/cdn.discordapp.com/icons/1320931723717902376/174fde885a08dfd98be5ffefa681b07d.png?format=webp&quality=lossless&width=663&height=663",
        ["content"] = content
    }

    local jsonData = game:GetService("HttpService"):JSONEncode(data)
    local headers = { ["Content-Type"] = "application/json" }

    if request then
        request({ Url = getgenv().WebhookUrl, Body = jsonData, Method = "POST", Headers = headers })
    elseif syn and syn.request then
        syn.request({ Url = getgenv().WebhookUrl, Body = jsonData, Method = "POST", Headers = headers })
    else
        warn("HTTP request function not found. Unable to send to webhook.")
    end
end

-- Function to format a single player's stats
local function formatPlayerStats(player)
    local data = game:GetService("ReplicatedStorage"):FindFirstChild("Datas") and game:GetService("ReplicatedStorage").Datas:FindFirstChild(player.UserId)
    if not data then return nil end

    local rebirths = data:FindFirstChild("Rebirth") and data.Rebirth.Value or 0
    local energy = data:FindFirstChild("Energy") and data.Energy.Value or 0

    -- Format the player stats
    return string.format("%s (%s), Rebirths: %d, Stats: %s", player.DisplayName, player.Name, rebirths, energy)
end

-- Gather stats from all players and send them to the webhook
local function sendAllStatsToWebhook()
    local allStats = {}

    for _, player in ipairs(game.Players:GetPlayers()) do
        local playerStats = formatPlayerStats(player)
        if playerStats then
            table.insert(allStats, playerStats)
        end
    end

    if #allStats > 0 then
        local content = table.concat(allStats, "\n")
        sendToWebhook(content)
    else
        warn("No stats to send to the webhook.")
    end
end

-- Execute on script load
sendAllStatsToWebhook()
